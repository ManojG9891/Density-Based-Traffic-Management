#include <LiquidCrystal_I2C.h>
#include <Wire.h>

// LCD configuration
LiquidCrystal_I2C lcd(0x27,16,2);

// Pin configuration for lane 1
const int greenPin1 = 5;
const int yellowPin1 = 4;
const int redPin1 = 3;
const int irSensorPin1 = 2;

// Pin configuration for lane 2
const int greenPin2 = 9;
const int yellowPin2 = A1;
const int redPin2 = 7;
const int irSensorPin2 = A0;

// Pin configuration for lane 3
const int greenPin3 = A3;
const int yellowPin3 = 8;
const int redPin3 = 6;
const int irSensorPin3 = A2;

// Pin configuration for lane 4
const int greenPin4 = 11;
const int yellowPin4 = 12;
const int redPin4 = 10;
const int irSensorPin4 = 13;

void setup() {
  // Initial LCD display and pin setup
  lcd.clear();
  lcd.begin();
  lcd.setBacklight(HIGH);
  lcd.setCursor(0, 0);
  lcd.print("Density Based");
  lcd.setCursor(0, 1);
  lcd.print("Traffic Signal");

  // Configuring pins for lane 1
  pinMode(greenPin1, OUTPUT);
  pinMode(yellowPin1, OUTPUT);
  pinMode(redPin1, OUTPUT);
  pinMode(irSensorPin1, INPUT);

  // Configuring pins for lane 2
  pinMode(greenPin2, OUTPUT);
  pinMode(yellowPin2, OUTPUT);
  pinMode(redPin2, OUTPUT);
  pinMode(irSensorPin2, INPUT);

  // Configuring pins for lane 3
  pinMode(greenPin3, OUTPUT);
  pinMode(yellowPin3, OUTPUT);
  pinMode(redPin3, OUTPUT);
  pinMode(irSensorPin3, INPUT);

  // Configuring pins for lane 4
  pinMode(greenPin4, OUTPUT);
  pinMode(yellowPin4, OUTPUT);
  pinMode(redPin4, OUTPUT);
  pinMode(irSensorPin4, INPUT);

  // Initial yellow light for 4 seconds
  digitalWrite(yellowPin1, HIGH);
  delay(4000); // 4 seconds yellow
}

void loop() {
  // Turn on red lights for all lanes initially
  digitalWrite(greenPin1, LOW);
  digitalWrite(yellowPin1, LOW);
  digitalWrite(redPin1, HIGH);

  digitalWrite(greenPin2, LOW);
  digitalWrite(yellowPin2, LOW);
  digitalWrite(redPin2, HIGH);

  digitalWrite(greenPin3, LOW);
  digitalWrite(yellowPin3, LOW);
  digitalWrite(redPin3, HIGH);

  digitalWrite(greenPin4, LOW);
  digitalWrite(yellowPin4, LOW);
  digitalWrite(redPin4, HIGH);

  // Lane 1: Turn on green light
  digitalWrite(redPin1, LOW);
  digitalWrite(greenPin1, HIGH);

  // Check IR sensor for lane 1 traffic density
  bool isSensor1Blocked = (digitalRead(irSensorPin1) == LOW);
  if (isSensor1Blocked) {
    // Display high-density message for lane 1 and delay 15 seconds
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L1:High Density");
    for (int i = 15; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000); // Delay for 1 second each iteration
    }
  } else {
    // Display normal-density message for lane 1 and delay 8 seconds
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L1:Normal Density ");
    for (int i = 8; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000); // Delay for 1 second each iteration
    }
  }
  // Turn off lane 1 green light after timing
  digitalWrite(greenPin1, LOW);

  // Switching to lane 2
  digitalWrite(redPin2, LOW);
  digitalWrite(yellowPin1, HIGH);
  digitalWrite(yellowPin2, HIGH);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Next Green Light");
  for (int i = 5; i > 0; --i) {
    lcd.setCursor(0, 1);
    lcd.print("in Lane 2 in ");
    lcd.print(i);
    delay(1000); // Delay for 1 second each iteration
  }

  // Resetting yellow lights and continuing for lane 2
  digitalWrite(yellowPin1, LOW);
  digitalWrite(redPin1, HIGH);
  
  digitalWrite(yellowPin2, LOW);
  digitalWrite(redPin2, LOW);

  digitalWrite(greenPin2, HIGH);
  
  // Checking IR sensor for lane 2 traffic density
  bool isSensor2Blocked = (digitalRead(irSensorPin2) == LOW);
  if (isSensor2Blocked) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L2:High Density");
    for (int i = 15; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000);
    }
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L2:Normal Density ");
    for (int i = 8; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000);
    }
  }
  digitalWrite(greenPin2,LOW);

  digitalWrite(redPin3, LOW);
  digitalWrite(yellowPin2, HIGH);
  digitalWrite(yellowPin3, HIGH);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Next Green Light");
  for (int i = 5; i > 0; --i) {
    lcd.setCursor(0, 1);
    lcd.print("in Lane 3 in ");
    lcd.print(i);
    delay(1000);
  }

  digitalWrite(yellowPin2, LOW);
  digitalWrite(redPin2, HIGH);

  digitalWrite(yellowPin3, LOW);
  digitalWrite(redPin3, LOW);

  digitalWrite(greenPin3,HIGH);
  

  bool isSensor3Blocked = (digitalRead(irSensorPin3) == LOW);
  if (isSensor3Blocked) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L3:High Density");
    for (int i = 15; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000);
    }
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L3:Normal Density ");
    for (int i = 8; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000);
    }
  }
  digitalWrite(greenPin3,LOW);

  digitalWrite(redPin4, LOW);
  digitalWrite(yellowPin3, HIGH);
  digitalWrite(yellowPin4, HIGH);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Next Green Light");
  for (int i = 5; i > 0; --i) {
    lcd.setCursor(0, 1);
    lcd.print("in Lane 4 in ");
    lcd.print(i);
    delay(1000);
  }

  digitalWrite(yellowPin3, LOW);
  digitalWrite(redPin3, HIGH);

  digitalWrite(yellowPin4, LOW);
  digitalWrite(redPin4, LOW);

  digitalWrite(greenPin4,HIGH);
  

  bool isSensor4Blocked = (digitalRead(irSensorPin4) == LOW);
  if (isSensor4Blocked) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L4:High Density");
    for (int i = 15; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000);
    }
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("L4:Normal Density ");
    for (int i = 8; i > 0; --i) {
      lcd.setCursor(0, 1);
      lcd.print(i);
      lcd.print(" second for Red");
      delay(1000);
    }
  }
  digitalWrite(greenPin4,LOW);

  digitalWrite(redPin1, LOW);
  digitalWrite(yellowPin4, HIGH);
  digitalWrite(yellowPin1, HIGH);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Next Green Light");
  for (int i = 5; i > 0; --i) {
    lcd.setCursor(0, 1);
    lcd.print("in Lane 1 in ");
    lcd.print(i);
    delay(1000);
  }

  digitalWrite(yellowPin4, LOW);
  digitalWrite(redPin4, HIGH);

  digitalWrite(yellowPin1, LOW);
  digitalWrite(redPin1, LOW);

}
